version: '3.8'

services:
  # Golang API Server
  api:
    build:
      context: .
      dockerfile: docker/Dockerfile.api
    ports:
      - "8081:8080"
    environment:
      - FOURSQUARE_API_KEY=${FOURSQUARE_API_KEY}
      - PYTHON_SERVICE_URL=http://intelligence:5000
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - GIN_MODE=release
      - LOG_LEVEL=info
    depends_on:
      - redis
      - intelligence
    networks:
      - placeintel-network
    restart: unless-stopped

  # Python Intelligence Service
  intelligence:
    build:
      context: .
      dockerfile: docker/Dockerfile.intelligence
    ports:
      - "5000:5000"
    environment:
      - PORT=5000
      - DEBUG=false
    networks:
      - placeintel-network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - placeintel-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # PostgreSQL Database (for future use)
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=placeintel_pro
      - POSTGRES_USER=placeintel
      - POSTGRES_PASSWORD=placeintel_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - placeintel-network
    restart: unless-stopped

  # Nginx Reverse Proxy (optional - for production)
  # Uncomment to enable nginx proxy with load balancing and security features
  # nginx:
  #   image: nginx:alpine
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./docs:/usr/share/nginx/html/docs:ro
  #   depends_on:
  #     - api
  #   networks:
  #     - placeintel-network
  #   restart: unless-stopped

volumes:
  redis_data:
  postgres_data:

networks:
  placeintel-network:
    driver: bridge